# Generated by Django 4.2.10 on 2025-05-05 21:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("university_structure", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("study_materials", "0001_initial"),
        ("courses", "0001_initial"),
        ("accounts", "0003_teachersubject_subject_teachersubject_teacher_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Class",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(verbose_name="Дата")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Запланировано"),
                            ("canceled", "Отменено"),
                            ("rescheduled", "Перенесено"),
                            ("completed", "Проведено"),
                        ],
                        default="scheduled",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "topic",
                    models.CharField(blank=True, max_length=255, verbose_name="Тема"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "cancellation_reason",
                    models.TextField(
                        blank=True, verbose_name="Причина отмены/переноса"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
            ],
            options={
                "verbose_name": "занятие",
                "verbose_name_plural": "занятия",
                "ordering": ["date", "time_slot__start_time"],
            },
        ),
        migrations.CreateModel(
            name="ClassType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                (
                    "short_name",
                    models.CharField(max_length=10, verbose_name="Сокращение"),
                ),
                (
                    "color",
                    models.CharField(
                        default="#FFFFFF",
                        help_text="HEX-код цвета",
                        max_length=7,
                        verbose_name="Цвет",
                    ),
                ),
            ],
            options={
                "verbose_name": "тип занятия",
                "verbose_name_plural": "типы занятий",
            },
        ),
        migrations.CreateModel(
            name="ConsultationSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weekday",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Понедельник"),
                            (1, "Вторник"),
                            (2, "Среда"),
                            (3, "Четверг"),
                            (4, "Пятница"),
                            (5, "Суббота"),
                            (6, "Воскресенье"),
                        ],
                        verbose_name="День недели",
                    ),
                ),
                ("start_time", models.TimeField(verbose_name="Время начала")),
                ("end_time", models.TimeField(verbose_name="Время окончания")),
                (
                    "week_type",
                    models.CharField(
                        choices=[
                            ("every", "Каждую неделю"),
                            ("odd", "По нечетным"),
                            ("even", "По четным"),
                        ],
                        default="every",
                        max_length=10,
                        verbose_name="Тип недели",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активна"),
                ),
                ("comment", models.TextField(blank=True, verbose_name="Комментарий")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        related_name="consultations",
                        to="university_structure.group",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consultations",
                        to="university_structure.room",
                    ),
                ),
                (
                    "semester",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consultations",
                        to="university_structure.semester",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consultations",
                        to="accounts.teacherprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "расписание консультаций",
                "verbose_name_plural": "расписания консультаций",
            },
        ),
        migrations.CreateModel(
            name="ExamSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(verbose_name="Дата")),
                ("start_time", models.TimeField(verbose_name="Время начала")),
                ("end_time", models.TimeField(verbose_name="Время окончания")),
                (
                    "exam_type",
                    models.CharField(
                        choices=[
                            ("exam", "Экзамен"),
                            ("credit", "Зачет"),
                            ("credit_grade", "Дифференцированный зачет"),
                            ("consultation", "Консультация перед экзаменом"),
                        ],
                        max_length=20,
                        verbose_name="Тип экзамена",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Запланирован"),
                            ("canceled", "Отменен"),
                            ("rescheduled", "Перенесен"),
                            ("completed", "Проведен"),
                        ],
                        default="scheduled",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        related_name="exams", to="university_structure.group"
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exams",
                        to="university_structure.room",
                    ),
                ),
                (
                    "semester",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exams",
                        to="university_structure.semester",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exams",
                        to="university_structure.subject",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exams",
                        to="accounts.teacherprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "расписание экзамена",
                "verbose_name_plural": "расписание экзаменов",
                "ordering": ["date", "start_time"],
            },
        ),
        migrations.CreateModel(
            name="ScheduleChange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "change_type",
                    models.CharField(
                        choices=[
                            ("cancel", "Отмена"),
                            ("reschedule", "Перенос"),
                            ("room_change", "Смена аудитории"),
                            ("teacher_change", "Смена преподавателя"),
                            ("other", "Другое"),
                        ],
                        max_length=20,
                        verbose_name="Тип изменения",
                    ),
                ),
                ("description", models.TextField(verbose_name="Описание изменения")),
                (
                    "new_date",
                    models.DateField(blank=True, null=True, verbose_name="Новая дата"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "is_notification_sent",
                    models.BooleanField(
                        default=False, verbose_name="Уведомление отправлено"
                    ),
                ),
                (
                    "notification_sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата отправки уведомления"
                    ),
                ),
                (
                    "affected_class",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="changes",
                        to="schedule.class",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_schedule_changes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "new_class",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="original_change",
                        to="schedule.class",
                    ),
                ),
                (
                    "new_room",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="schedule_changes",
                        to="university_structure.room",
                    ),
                ),
                (
                    "new_teacher",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="schedule_changes",
                        to="accounts.teacherprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "изменение в расписании",
                "verbose_name_plural": "изменения в расписании",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TimeSlot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.PositiveSmallIntegerField(verbose_name="Номер пары")),
                ("start_time", models.TimeField(verbose_name="Время начала")),
                ("end_time", models.TimeField(verbose_name="Время окончания")),
                (
                    "break_after",
                    models.PositiveSmallIntegerField(
                        default=10, verbose_name="Перерыв после (мин)"
                    ),
                ),
            ],
            options={
                "verbose_name": "временной слот",
                "verbose_name_plural": "временные слоты",
                "ordering": ["number"],
            },
        ),
        migrations.CreateModel(
            name="ScheduleTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "semester",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedule_templates",
                        to="university_structure.semester",
                    ),
                ),
            ],
            options={
                "verbose_name": "шаблон расписания",
                "verbose_name_plural": "шаблоны расписания",
            },
        ),
        migrations.CreateModel(
            name="ScheduleNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("class_reminder", "Напоминание о занятии"),
                            ("class_change", "Изменение в расписании"),
                            ("exam_reminder", "Напоминание об экзамене"),
                            ("consultation_reminder", "Напоминание о консультации"),
                        ],
                        max_length=21,
                        verbose_name="Тип уведомления",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Заголовок")),
                ("message", models.TextField(verbose_name="Сообщение")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "scheduled_for",
                    models.DateTimeField(verbose_name="Запланировано на"),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Отправлено"
                    ),
                ),
                (
                    "is_sent",
                    models.BooleanField(default=False, verbose_name="Отправлено"),
                ),
                (
                    "class_instance",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="schedule.class",
                    ),
                ),
                (
                    "consultation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="schedule.consultationschedule",
                    ),
                ),
                (
                    "exam",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="schedule.examschedule",
                    ),
                ),
                (
                    "recipients",
                    models.ManyToManyField(
                        related_name="schedule_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "schedule_change",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="schedule.schedulechange",
                    ),
                ),
            ],
            options={
                "verbose_name": "уведомление о расписании",
                "verbose_name_plural": "уведомления о расписании",
                "ordering": ["-scheduled_for"],
            },
        ),
        migrations.CreateModel(
            name="ScheduleItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weekday",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Понедельник"),
                            (1, "Вторник"),
                            (2, "Среда"),
                            (3, "Четверг"),
                            (4, "Пятница"),
                            (5, "Суббота"),
                            (6, "Воскресенье"),
                        ],
                        verbose_name="День недели",
                    ),
                ),
                (
                    "week_type",
                    models.CharField(
                        choices=[
                            ("every", "Каждую неделю"),
                            ("odd", "По нечетным"),
                            ("even", "По четным"),
                        ],
                        default="every",
                        max_length=10,
                        verbose_name="Тип недели",
                    ),
                ),
                ("comment", models.TextField(blank=True, verbose_name="Комментарий")),
                (
                    "class_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedule_items",
                        to="schedule.classtype",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        related_name="schedule_items", to="university_structure.group"
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedule_items",
                        to="university_structure.room",
                    ),
                ),
                (
                    "schedule_template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="schedule.scheduletemplate",
                    ),
                ),
                (
                    "subgroups",
                    models.ManyToManyField(
                        blank=True,
                        related_name="schedule_items",
                        to="university_structure.subgroup",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedule_items",
                        to="university_structure.subject",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedule_items",
                        to="accounts.teacherprofile",
                    ),
                ),
                (
                    "time_slot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedule_items",
                        to="schedule.timeslot",
                    ),
                ),
            ],
            options={
                "verbose_name": "элемент расписания",
                "verbose_name_plural": "элементы расписания",
            },
        ),
        migrations.CreateModel(
            name="ScheduleExport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "export_type",
                    models.CharField(
                        choices=[
                            ("student", "Расписание студента"),
                            ("group", "Расписание группы"),
                            ("teacher", "Расписание преподавателя"),
                            ("room", "Расписание аудитории"),
                            ("department", "Расписание кафедры"),
                            ("faculty", "Расписание факультета"),
                        ],
                        max_length=20,
                        verbose_name="Тип экспорта",
                    ),
                ),
                (
                    "format_type",
                    models.CharField(
                        choices=[
                            ("pdf", "PDF"),
                            ("excel", "Excel"),
                            ("ical", "iCalendar"),
                            ("json", "JSON"),
                        ],
                        max_length=10,
                        verbose_name="Формат",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Дата начала")),
                ("end_date", models.DateField(verbose_name="Дата окончания")),
                (
                    "file",
                    models.FileField(
                        upload_to="schedule_exports/", verbose_name="Файл"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="schedule_exports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="schedule_exports",
                        to="university_structure.department",
                    ),
                ),
                (
                    "faculty",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="schedule_exports",
                        to="university_structure.faculty",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="schedule_exports",
                        to="university_structure.group",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="schedule_exports",
                        to="university_structure.room",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="schedule_exports",
                        to="accounts.studentprofile",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="schedule_exports",
                        to="accounts.teacherprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "экспорт расписания",
                "verbose_name_plural": "экспорты расписания",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="schedulechange",
            name="new_time_slot",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="schedule_changes",
                to="schedule.timeslot",
            ),
        ),
        migrations.CreateModel(
            name="ScheduleAdditionalInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_online",
                    models.BooleanField(default=False, verbose_name="Онлайн-занятие"),
                ),
                (
                    "online_meeting_url",
                    models.URLField(
                        blank=True, verbose_name="Ссылка на онлайн-занятие"
                    ),
                ),
                (
                    "preparation_instructions",
                    models.TextField(
                        blank=True, verbose_name="Инструкции по подготовке"
                    ),
                ),
                (
                    "class_instance",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="additional_info",
                        to="schedule.class",
                    ),
                ),
                (
                    "course_element",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="scheduled_classes",
                        to="courses.courseelement",
                    ),
                ),
                (
                    "materials",
                    models.ManyToManyField(
                        blank=True,
                        related_name="scheduled_classes",
                        to="study_materials.material",
                    ),
                ),
            ],
            options={
                "verbose_name": "дополнительная информация к занятию",
                "verbose_name_plural": "дополнительная информация к занятиям",
            },
        ),
        migrations.CreateModel(
            name="DailyScheduleGeneration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(unique=True, verbose_name="Дата")),
                (
                    "is_generated",
                    models.BooleanField(default=False, verbose_name="Сгенерировано"),
                ),
                (
                    "generated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата генерации"
                    ),
                ),
                (
                    "generated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="generated_schedules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "schedule_template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_generations",
                        to="schedule.scheduletemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "генерация ежедневного расписания",
                "verbose_name_plural": "генерации ежедневного расписания",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="ClassAttendanceTracking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_conducted",
                    models.BooleanField(default=False, verbose_name="Проведено"),
                ),
                (
                    "actual_start_time",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Фактическое время начала"
                    ),
                ),
                (
                    "actual_end_time",
                    models.TimeField(
                        blank=True,
                        null=True,
                        verbose_name="Фактическое время окончания",
                    ),
                ),
                (
                    "students_count",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Количество студентов"
                    ),
                ),
                (
                    "students_present",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Присутствующих студентов"
                    ),
                ),
                (
                    "teacher_comment",
                    models.TextField(
                        blank=True, verbose_name="Комментарий преподавателя"
                    ),
                ),
                (
                    "marked_at",
                    models.DateTimeField(auto_now=True, verbose_name="Отмечено"),
                ),
                (
                    "class_instance",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendance_tracking",
                        to="schedule.class",
                    ),
                ),
                (
                    "conducted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="conducted_classes",
                        to="accounts.teacherprofile",
                    ),
                ),
                (
                    "substitute_teacher",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="substituted_classes",
                        to="accounts.teacherprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "отметка о проведении",
                "verbose_name_plural": "отметки о проведении",
            },
        ),
        migrations.AddField(
            model_name="class",
            name="class_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="classes",
                to="schedule.classtype",
            ),
        ),
        migrations.AddField(
            model_name="class",
            name="groups",
            field=models.ManyToManyField(
                related_name="classes", to="university_structure.group"
            ),
        ),
        migrations.AddField(
            model_name="class",
            name="original_class",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="rescheduled_to",
                to="schedule.class",
            ),
        ),
        migrations.AddField(
            model_name="class",
            name="room",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="classes",
                to="university_structure.room",
            ),
        ),
        migrations.AddField(
            model_name="class",
            name="schedule_item",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="classes",
                to="schedule.scheduleitem",
            ),
        ),
        migrations.AddField(
            model_name="class",
            name="subgroups",
            field=models.ManyToManyField(
                blank=True, related_name="classes", to="university_structure.subgroup"
            ),
        ),
        migrations.AddField(
            model_name="class",
            name="subject",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="classes",
                to="university_structure.subject",
            ),
        ),
        migrations.AddField(
            model_name="class",
            name="teacher",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="classes",
                to="accounts.teacherprofile",
            ),
        ),
        migrations.AddField(
            model_name="class",
            name="time_slot",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="classes",
                to="schedule.timeslot",
            ),
        ),
        migrations.AddConstraint(
            model_name="scheduleitem",
            constraint=models.UniqueConstraint(
                condition=models.Q(("week_type", "every")),
                fields=("schedule_template", "room", "time_slot", "weekday"),
                name="unique_room_timeslot_weekday_every",
            ),
        ),
        migrations.AddConstraint(
            model_name="scheduleitem",
            constraint=models.UniqueConstraint(
                condition=models.Q(("week_type", "every"), _negated=True),
                fields=(
                    "schedule_template",
                    "room",
                    "time_slot",
                    "weekday",
                    "week_type",
                ),
                name="unique_room_timeslot_weekday_week_type",
            ),
        ),
        migrations.AddConstraint(
            model_name="class",
            constraint=models.UniqueConstraint(
                condition=models.Q(("status", "canceled"), _negated=True),
                fields=("date", "time_slot", "room"),
                name="unique_date_timeslot_room",
            ),
        ),
    ]
