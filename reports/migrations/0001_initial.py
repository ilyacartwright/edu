# Generated by Django 4.2.10 on 2025-05-05 21:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import reports.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accounts", "0003_teachersubject_subject_teachersubject_teacher_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
        ("university_structure", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Название")),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("academic_performance", "Успеваемость"),
                            ("attendance", "Посещаемость"),
                            ("workload", "Нагрузка преподавателей"),
                            ("grade_sheet", "Ведомость"),
                            ("transcript", "Зачетная книжка"),
                            ("schedule", "Расписание"),
                            ("contingent", "Контингент студентов"),
                            ("custom", "Пользовательский отчет"),
                        ],
                        max_length=30,
                        verbose_name="Тип отчета",
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(default=dict, verbose_name="Параметры"),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=reports.models.get_report_file_path,
                        verbose_name="Файл отчета",
                    ),
                ),
                (
                    "content",
                    models.TextField(blank=True, verbose_name="Содержимое (HTML)"),
                ),
                (
                    "period_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Начало периода"
                    ),
                ),
                (
                    "period_end",
                    models.DateField(
                        blank=True, null=True, verbose_name="Конец периода"
                    ),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("generating", "Генерируется"),
                            ("completed", "Завершен"),
                            ("failed", "Ошибка"),
                        ],
                        default="generating",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Сообщение об ошибке"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(default=False, verbose_name="Публичный"),
                ),
                (
                    "access_code",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Код доступа"
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="generated_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "semester",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reports",
                        to="university_structure.semester",
                    ),
                ),
            ],
            options={
                "verbose_name": "отчет",
                "verbose_name_plural": "отчеты",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Transcript",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transcript_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Номер зачетной книжки"
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        default=dict, verbose_name="Данные зачетной книжки"
                    ),
                ),
                (
                    "gpa",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Средний балл",
                    ),
                ),
                (
                    "ects",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="ECTS кредиты",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "academic_year",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transcripts",
                        to="university_structure.academicyear",
                    ),
                ),
                (
                    "base_report",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transcript_details",
                        to="reports.report",
                    ),
                ),
                (
                    "semester",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transcripts",
                        to="university_structure.semester",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transcripts",
                        to="accounts.studentprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "зачетная книжка",
                "verbose_name_plural": "зачетные книжки",
            },
        ),
        migrations.CreateModel(
            name="TeacherWorkloadReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.JSONField(default=dict, verbose_name="Данные отчета")),
                (
                    "total_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Всего часов",
                    ),
                ),
                (
                    "lectures_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Лекции",
                    ),
                ),
                (
                    "seminars_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Семинары",
                    ),
                ),
                (
                    "labs_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Лабораторные",
                    ),
                ),
                (
                    "practices_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Практики",
                    ),
                ),
                (
                    "consultations_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Консультации",
                    ),
                ),
                (
                    "exams_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Экзамены",
                    ),
                ),
                (
                    "course_works_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Курсовые работы",
                    ),
                ),
                (
                    "thesis_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Дипломные работы",
                    ),
                ),
                (
                    "other_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Прочие",
                    ),
                ),
                (
                    "academic_year",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="workload_reports",
                        to="university_structure.academicyear",
                    ),
                ),
                (
                    "base_report",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workload_details",
                        to="reports.report",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="workload_reports",
                        to="university_structure.department",
                    ),
                ),
                (
                    "semester",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="workload_reports",
                        to="university_structure.semester",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="workload_reports",
                        to="accounts.teacherprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "отчет о нагрузке",
                "verbose_name_plural": "отчеты о нагрузке",
            },
        ),
        migrations.CreateModel(
            name="ReportTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Название")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("academic_performance", "Успеваемость"),
                            ("attendance", "Посещаемость"),
                            ("workload", "Нагрузка преподавателей"),
                            ("grade_sheet", "Ведомость"),
                            ("transcript", "Зачетная книжка"),
                            ("schedule", "Расписание"),
                            ("contingent", "Контингент студентов"),
                            ("custom", "Пользовательский отчет"),
                        ],
                        max_length=30,
                        verbose_name="Тип отчета",
                    ),
                ),
                (
                    "template_file",
                    models.FileField(
                        upload_to="report_templates/", verbose_name="Файл шаблона"
                    ),
                ),
                (
                    "parameters_schema",
                    models.JSONField(default=dict, verbose_name="Схема параметров"),
                ),
                (
                    "available_for",
                    models.JSONField(default=list, verbose_name="Доступен для ролей"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_report_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "шаблон отчета",
                "verbose_name_plural": "шаблоны отчетов",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ReportScheduledTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Название")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "parameters",
                    models.JSONField(default=dict, verbose_name="Параметры"),
                ),
                (
                    "recurrence",
                    models.CharField(
                        choices=[
                            ("daily", "Ежедневно"),
                            ("weekly", "Еженедельно"),
                            ("monthly", "Ежемесячно"),
                            ("quarterly", "Ежеквартально"),
                            ("semester", "По семестрам"),
                            ("yearly", "Ежегодно"),
                        ],
                        max_length=20,
                        verbose_name="Периодичность",
                    ),
                ),
                (
                    "weekday",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="День недели (0-6)"
                    ),
                ),
                (
                    "day_of_month",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="День месяца"
                    ),
                ),
                (
                    "hour",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Час (0-23)"
                    ),
                ),
                (
                    "minute",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Минута (0-59)"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активна"),
                ),
                (
                    "send_email",
                    models.BooleanField(
                        default=True, verbose_name="Отправлять по email"
                    ),
                ),
                (
                    "email_subject",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Тема письма"
                    ),
                ),
                (
                    "email_body",
                    models.TextField(blank=True, verbose_name="Текст письма"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "last_run",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Последний запуск"
                    ),
                ),
                (
                    "next_run",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Следующий запуск"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_report_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "recipients",
                    models.ManyToManyField(
                        blank=True,
                        related_name="scheduled_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scheduled_tasks",
                        to="reports.reporttemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "запланированная задача отчета",
                "verbose_name_plural": "запланированные задачи отчетов",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ReportScheduledRun",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "scheduled_for",
                    models.DateTimeField(verbose_name="Запланировано на"),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Начало выполнения"
                    ),
                ),
                (
                    "finished_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Окончание выполнения"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Ожидает"),
                            ("running", "Выполняется"),
                            ("completed", "Завершено"),
                            ("failed", "Ошибка"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Сообщение об ошибке"),
                ),
                (
                    "is_sent",
                    models.BooleanField(default=False, verbose_name="Отправлено"),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Время отправки"
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="scheduled_run",
                        to="reports.report",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="runs",
                        to="reports.reportscheduledtask",
                    ),
                ),
            ],
            options={
                "verbose_name": "запуск запланированного отчета",
                "verbose_name_plural": "запуски запланированных отчетов",
                "ordering": ["-scheduled_for"],
            },
        ),
        migrations.CreateModel(
            name="ReportDashboard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Название")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "is_public",
                    models.BooleanField(default=False, verbose_name="Публичный"),
                ),
                ("layout", models.JSONField(default=dict, verbose_name="Макет")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_dashboards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shared_with",
                    models.ManyToManyField(
                        blank=True,
                        related_name="shared_dashboards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "панель отчетов",
                "verbose_name_plural": "панели отчетов",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ReportCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "icon",
                    models.CharField(blank=True, max_length=50, verbose_name="Иконка"),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(default=0, verbose_name="Порядок"),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="reports.reportcategory",
                        verbose_name="Родительская категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "категория отчетов",
                "verbose_name_plural": "категории отчетов",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="ReportAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "accessed_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата доступа"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP-адрес"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User-Agent")),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="access_logs",
                        to="reports.report",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="report_access_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "доступ к отчету",
                "verbose_name_plural": "доступы к отчетам",
                "ordering": ["-accessed_at"],
            },
        ),
        migrations.AddField(
            model_name="report",
            name="template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="generated_reports",
                to="reports.reporttemplate",
            ),
        ),
        migrations.CreateModel(
            name="GradeSheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "control_form",
                    models.CharField(
                        choices=[
                            ("exam", "Экзамен"),
                            ("credit", "Зачет"),
                            ("credit_grade", "Дифференцированный зачет"),
                            ("coursework", "Курсовая работа"),
                            ("coursework_project", "Курсовой проект"),
                        ],
                        max_length=20,
                        verbose_name="Форма контроля",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата проведения"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Черновик"),
                            ("active", "Активна"),
                            ("closed", "Закрыта"),
                            ("archived", "В архиве"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Номер ведомости"
                    ),
                ),
                (
                    "data",
                    models.JSONField(default=dict, verbose_name="Данные ведомости"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "closed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата закрытия"
                    ),
                ),
                (
                    "signed_by_teacher",
                    models.BooleanField(
                        default=False, verbose_name="Подписана преподавателем"
                    ),
                ),
                (
                    "signed_by_head",
                    models.BooleanField(
                        default=False, verbose_name="Подписана зав. кафедрой"
                    ),
                ),
                (
                    "base_report",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grade_sheet_details",
                        to="reports.report",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grade_sheets",
                        to="university_structure.group",
                    ),
                ),
                (
                    "semester",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grade_sheets",
                        to="university_structure.semester",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grade_sheets",
                        to="university_structure.subject",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grade_sheets",
                        to="accounts.teacherprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "ведомость",
                "verbose_name_plural": "ведомости",
                "unique_together": {("subject", "group", "semester", "control_form")},
            },
        ),
        migrations.CreateModel(
            name="DashboardWidget",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Заголовок")),
                (
                    "widget_type",
                    models.CharField(
                        choices=[
                            ("chart", "График"),
                            ("table", "Таблица"),
                            ("counter", "Счетчик"),
                            ("gauge", "Индикатор"),
                            ("text", "Текст"),
                            ("custom", "Пользовательский"),
                        ],
                        max_length=20,
                        verbose_name="Тип виджета",
                    ),
                ),
                ("settings", models.JSONField(default=dict, verbose_name="Настройки")),
                (
                    "data",
                    models.JSONField(blank=True, null=True, verbose_name="Данные"),
                ),
                (
                    "position_x",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Позиция X"
                    ),
                ),
                (
                    "position_y",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Позиция Y"
                    ),
                ),
                (
                    "width",
                    models.PositiveSmallIntegerField(default=4, verbose_name="Ширина"),
                ),
                (
                    "height",
                    models.PositiveSmallIntegerField(default=4, verbose_name="Высота"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "dashboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="widgets",
                        to="reports.reportdashboard",
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dashboard_widgets",
                        to="reports.report",
                    ),
                ),
            ],
            options={
                "verbose_name": "виджет панели",
                "verbose_name_plural": "виджеты панели",
                "ordering": ["dashboard", "position_y", "position_x"],
            },
        ),
        migrations.CreateModel(
            name="ContingentReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Дата отчета"
                    ),
                ),
                (
                    "detail_level",
                    models.CharField(
                        choices=[
                            ("university", "Университет"),
                            ("faculty", "Факультет"),
                            ("department", "Кафедра"),
                            ("specialization", "Специальность"),
                            ("group", "Группа"),
                        ],
                        max_length=20,
                        verbose_name="Уровень детализации",
                    ),
                ),
                ("data", models.JSONField(default=dict, verbose_name="Данные отчета")),
                (
                    "total_students",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Всего студентов"
                    ),
                ),
                (
                    "budget_students",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="На бюджете"
                    ),
                ),
                (
                    "contract_students",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="На контракте"
                    ),
                ),
                (
                    "full_time_students",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Очная форма"
                    ),
                ),
                (
                    "part_time_students",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Заочная форма"
                    ),
                ),
                (
                    "evening_students",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Вечерняя форма"
                    ),
                ),
                (
                    "distance_students",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Дистанционная форма"
                    ),
                ),
                (
                    "academic_year",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contingent_reports",
                        to="university_structure.academicyear",
                    ),
                ),
                (
                    "base_report",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contingent_details",
                        to="reports.report",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contingent_reports",
                        to="university_structure.department",
                    ),
                ),
                (
                    "faculty",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contingent_reports",
                        to="university_structure.faculty",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contingent_reports",
                        to="university_structure.group",
                    ),
                ),
                (
                    "specialization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contingent_reports",
                        to="university_structure.specialization",
                    ),
                ),
            ],
            options={
                "verbose_name": "отчет о контингенте",
                "verbose_name_plural": "отчеты о контингенте",
            },
        ),
        migrations.CreateModel(
            name="AttendanceReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "detail_level",
                    models.CharField(
                        choices=[
                            ("faculty", "Факультет"),
                            ("department", "Кафедра"),
                            ("group", "Группа"),
                            ("student", "Студент"),
                            ("subject", "Предмет"),
                        ],
                        max_length=20,
                        verbose_name="Уровень детализации",
                    ),
                ),
                ("data", models.JSONField(default=dict, verbose_name="Данные отчета")),
                (
                    "attendance_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Процент посещаемости",
                    ),
                ),
                (
                    "absence_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Процент пропусков",
                    ),
                ),
                (
                    "excused_absence_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Процент уважительных причин",
                    ),
                ),
                (
                    "academic_year",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="attendance_reports",
                        to="university_structure.academicyear",
                    ),
                ),
                (
                    "base_report",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendance_details",
                        to="reports.report",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="attendance_reports",
                        to="university_structure.department",
                    ),
                ),
                (
                    "faculty",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="attendance_reports",
                        to="university_structure.faculty",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="attendance_reports",
                        to="university_structure.group",
                    ),
                ),
                (
                    "semester",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="attendance_reports",
                        to="university_structure.semester",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="attendance_reports",
                        to="accounts.studentprofile",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="attendance_reports",
                        to="university_structure.subject",
                    ),
                ),
            ],
            options={
                "verbose_name": "отчет о посещаемости",
                "verbose_name_plural": "отчеты о посещаемости",
            },
        ),
        migrations.CreateModel(
            name="AcademicPerformanceReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "detail_level",
                    models.CharField(
                        choices=[
                            ("faculty", "Факультет"),
                            ("department", "Кафедра"),
                            ("group", "Группа"),
                            ("student", "Студент"),
                            ("subject", "Предмет"),
                        ],
                        max_length=20,
                        verbose_name="Уровень детализации",
                    ),
                ),
                ("data", models.JSONField(default=dict, verbose_name="Данные отчета")),
                (
                    "average_grade",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Средний балл",
                    ),
                ),
                (
                    "passing_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Процент успеваемости",
                    ),
                ),
                (
                    "excellence_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Процент отличников",
                    ),
                ),
                (
                    "failure_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Процент неуспевающих",
                    ),
                ),
                (
                    "academic_year",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="academic_performance_reports",
                        to="university_structure.academicyear",
                    ),
                ),
                (
                    "base_report",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="academic_performance_details",
                        to="reports.report",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="academic_performance_reports",
                        to="university_structure.department",
                    ),
                ),
                (
                    "faculty",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="academic_performance_reports",
                        to="university_structure.faculty",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="academic_performance_reports",
                        to="university_structure.group",
                    ),
                ),
                (
                    "semester",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="academic_performance_reports",
                        to="university_structure.semester",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="academic_performance_reports",
                        to="accounts.studentprofile",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="academic_performance_reports",
                        to="university_structure.subject",
                    ),
                ),
            ],
            options={
                "verbose_name": "отчет об успеваемости",
                "verbose_name_plural": "отчеты об успеваемости",
            },
        ),
        migrations.CreateModel(
            name="ReportSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активна"),
                ),
                (
                    "parameters",
                    models.JSONField(default=dict, verbose_name="Параметры"),
                ),
                (
                    "recurrence",
                    models.CharField(
                        choices=[
                            ("daily", "Ежедневно"),
                            ("weekly", "Еженедельно"),
                            ("monthly", "Ежемесячно"),
                            ("quarterly", "Ежеквартально"),
                            ("semester", "По семестрам"),
                            ("yearly", "Ежегодно"),
                        ],
                        max_length=20,
                        verbose_name="Периодичность",
                    ),
                ),
                (
                    "send_email",
                    models.BooleanField(
                        default=True, verbose_name="Отправлять по email"
                    ),
                ),
                (
                    "send_notification",
                    models.BooleanField(
                        default=True, verbose_name="Отправлять уведомление"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "last_sent",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Последняя отправка"
                    ),
                ),
                (
                    "report_template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriptions",
                        to="reports.reporttemplate",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="report_subscriptions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "подписка на отчеты",
                "verbose_name_plural": "подписки на отчеты",
                "unique_together": {("user", "report_template")},
            },
        ),
        migrations.CreateModel(
            name="GradeSheetEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "grade",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("excellent", "Отлично"),
                            ("good", "Хорошо"),
                            ("satisfactory", "Удовлетворительно"),
                            ("unsatisfactory", "Неудовлетворительно"),
                            ("passed", "Зачтено"),
                            ("not_passed", "Не зачтено"),
                            ("not_appeared", "Не явился"),
                            ("not_allowed", "Не допущен"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Оценка",
                    ),
                ),
                (
                    "numeric_grade",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Числовая оценка"
                    ),
                ),
                (
                    "graded_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата выставления"
                    ),
                ),
                ("comment", models.TextField(blank=True, verbose_name="Комментарий")),
                (
                    "grade_sheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entries",
                        to="reports.gradesheet",
                    ),
                ),
                (
                    "graded_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="graded_entries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grade_sheet_entries",
                        to="accounts.studentprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "запись в ведомости",
                "verbose_name_plural": "записи в ведомостях",
                "unique_together": {("grade_sheet", "student")},
            },
        ),
    ]
