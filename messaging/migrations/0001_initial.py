# Generated by Django 4.2.10 on 2025-05-05 21:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Announcement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Заголовок")),
                ("content", models.TextField(verbose_name="Содержание")),
                (
                    "is_public",
                    models.BooleanField(default=False, verbose_name="Публичное"),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "target_type",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Тип целевой группы"
                    ),
                ),
                (
                    "target_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Название целевой группы",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "start_date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Дата начала"
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата окончания"
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Низкая"),
                            ("normal", "Обычная"),
                            ("high", "Высокая"),
                            ("urgent", "Срочная"),
                        ],
                        default="normal",
                        max_length=10,
                        verbose_name="Приоритет",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Черновик"),
                            ("published", "Опубликовано"),
                            ("archived", "В архиве"),
                        ],
                        default="draft",
                        max_length=10,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "send_notification",
                    models.BooleanField(
                        default=True, verbose_name="Отправить уведомление"
                    ),
                ),
                (
                    "show_on_dashboard",
                    models.BooleanField(
                        default=True, verbose_name="Показывать на дашборде"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="announcements",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор",
                    ),
                ),
            ],
            options={
                "verbose_name": "объявление",
                "verbose_name_plural": "объявления",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AnnouncementCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                ("slug", models.SlugField(unique=True, verbose_name="Идентификатор")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "icon",
                    models.CharField(blank=True, max_length=50, verbose_name="Иконка"),
                ),
                (
                    "color",
                    models.CharField(
                        default="#3498db", max_length=20, verbose_name="Цвет"
                    ),
                ),
            ],
            options={
                "verbose_name": "категория объявлений",
                "verbose_name_plural": "категории объявлений",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="GroupMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "recipient_type",
                    models.CharField(max_length=50, verbose_name="Тип получателя"),
                ),
                (
                    "recipient_name",
                    models.CharField(
                        max_length=255, verbose_name="Название получателя"
                    ),
                ),
                ("subject", models.CharField(max_length=255, verbose_name="Тема")),
                ("body", models.TextField(verbose_name="Текст сообщения")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "is_important",
                    models.BooleanField(default=False, verbose_name="Важное"),
                ),
                (
                    "is_announcement",
                    models.BooleanField(default=False, verbose_name="Объявление"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "групповое сообщение",
                "verbose_name_plural": "групповые сообщения",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject", models.CharField(max_length=255, verbose_name="Тема")),
                ("body", models.TextField(verbose_name="Текст сообщения")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "is_read",
                    models.BooleanField(default=False, verbose_name="Прочитано"),
                ),
                (
                    "read_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата прочтения"
                    ),
                ),
                (
                    "is_deleted_by_sender",
                    models.BooleanField(
                        default=False, verbose_name="Удалено отправителем"
                    ),
                ),
                (
                    "is_deleted_by_recipient",
                    models.BooleanField(
                        default=False, verbose_name="Удалено получателем"
                    ),
                ),
                (
                    "is_starred_by_sender",
                    models.BooleanField(
                        default=False, verbose_name="Помечено отправителем"
                    ),
                ),
                (
                    "is_starred_by_recipient",
                    models.BooleanField(
                        default=False, verbose_name="Помечено получателем"
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_messages",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Получатель",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_messages",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Отправитель",
                    ),
                ),
            ],
            options={
                "verbose_name": "личное сообщение",
                "verbose_name_plural": "личные сообщения",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MessageThread",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject", models.CharField(max_length=255, verbose_name="Тема")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "last_message_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата последнего сообщения"
                    ),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        related_name="message_threads",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Участники",
                    ),
                ),
            ],
            options={
                "verbose_name": "цепочка сообщений",
                "verbose_name_plural": "цепочки сообщений",
                "ordering": ["-last_message_at"],
            },
        ),
        migrations.CreateModel(
            name="ThreadMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("body", models.TextField(verbose_name="Текст сообщения")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
            ],
            options={
                "verbose_name": "сообщение в цепочке",
                "verbose_name_plural": "сообщения в цепочке",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="ThreadMessageReadStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время прочтения"
                    ),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="messaging.threadmessage",
                        verbose_name="Сообщение",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "статус прочтения сообщения",
                "verbose_name_plural": "статусы прочтения сообщений",
                "unique_together": {("message", "user")},
            },
        ),
        migrations.CreateModel(
            name="ThreadMessageAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="thread_message_attachments/", verbose_name="Файл"
                    ),
                ),
                (
                    "filename",
                    models.CharField(max_length=255, verbose_name="Имя файла"),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(default=0, verbose_name="Размер файла"),
                ),
                (
                    "content_type",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Тип содержимого"
                    ),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="messaging.threadmessage",
                        verbose_name="Сообщение",
                    ),
                ),
            ],
            options={
                "verbose_name": "вложение к сообщению в цепочке",
                "verbose_name_plural": "вложения к сообщениям в цепочке",
            },
        ),
        migrations.AddField(
            model_name="threadmessage",
            name="read_by",
            field=models.ManyToManyField(
                blank=True,
                related_name="read_thread_messages",
                through="messaging.ThreadMessageReadStatus",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Прочитано пользователями",
            ),
        ),
        migrations.AddField(
            model_name="threadmessage",
            name="sender",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="thread_messages",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Отправитель",
            ),
        ),
        migrations.AddField(
            model_name="threadmessage",
            name="thread",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="messages",
                to="messaging.messagethread",
                verbose_name="Цепочка",
            ),
        ),
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "web_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Уведомления на сайте"
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Уведомления по email"
                    ),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(default=False, verbose_name="SMS уведомления"),
                ),
                (
                    "push_notifications",
                    models.BooleanField(default=True, verbose_name="Push уведомления"),
                ),
                (
                    "system_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Системные уведомления"
                    ),
                ),
                (
                    "academic_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Учебные уведомления"
                    ),
                ),
                (
                    "message_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Уведомления о сообщениях"
                    ),
                ),
                (
                    "schedule_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Уведомления о расписании"
                    ),
                ),
                (
                    "grade_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Уведомления об оценках"
                    ),
                ),
                (
                    "course_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Уведомления о курсах"
                    ),
                ),
                (
                    "announcement_notifications",
                    models.BooleanField(default=True, verbose_name="Объявления"),
                ),
                (
                    "notification_start_time",
                    models.TimeField(
                        default="09:00", verbose_name="Время начала уведомлений"
                    ),
                ),
                (
                    "notification_end_time",
                    models.TimeField(
                        default="21:00", verbose_name="Время окончания уведомлений"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_preferences",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "настройки уведомлений",
                "verbose_name_plural": "настройки уведомлений",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("system", "Системное"),
                            ("academic", "Учебное"),
                            ("message", "Сообщение"),
                            ("schedule", "Расписание"),
                            ("grade", "Оценка"),
                            ("course", "Курс"),
                            ("announcement", "Объявление"),
                            ("other", "Другое"),
                        ],
                        max_length=20,
                        verbose_name="Тип уведомления",
                    ),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                ("title", models.CharField(max_length=255, verbose_name="Заголовок")),
                ("message", models.TextField(verbose_name="Сообщение")),
                (
                    "link",
                    models.CharField(blank=True, max_length=255, verbose_name="Ссылка"),
                ),
                (
                    "icon",
                    models.CharField(blank=True, max_length=50, verbose_name="Иконка"),
                ),
                (
                    "icon_color",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Цвет иконки"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "is_read",
                    models.BooleanField(default=False, verbose_name="Прочитано"),
                ),
                (
                    "read_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата прочтения"
                    ),
                ),
                (
                    "is_important",
                    models.BooleanField(default=False, verbose_name="Важное"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "уведомление",
                "verbose_name_plural": "уведомления",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MessageAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="message_attachments/", verbose_name="Файл"
                    ),
                ),
                (
                    "filename",
                    models.CharField(max_length=255, verbose_name="Имя файла"),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(default=0, verbose_name="Размер файла"),
                ),
                (
                    "content_type",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Тип содержимого"
                    ),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="messaging.message",
                        verbose_name="Сообщение",
                    ),
                ),
            ],
            options={
                "verbose_name": "вложение к сообщению",
                "verbose_name_plural": "вложения к сообщениям",
            },
        ),
        migrations.CreateModel(
            name="GroupMessageReadStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время прочтения"
                    ),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="messaging.groupmessage",
                        verbose_name="Сообщение",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "статус прочтения группового сообщения",
                "verbose_name_plural": "статусы прочтения групповых сообщений",
                "unique_together": {("message", "user")},
            },
        ),
        migrations.CreateModel(
            name="GroupMessageAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="group_message_attachments/", verbose_name="Файл"
                    ),
                ),
                (
                    "filename",
                    models.CharField(max_length=255, verbose_name="Имя файла"),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(default=0, verbose_name="Размер файла"),
                ),
                (
                    "content_type",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Тип содержимого"
                    ),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="messaging.groupmessage",
                        verbose_name="Сообщение",
                    ),
                ),
            ],
            options={
                "verbose_name": "вложение к групповому сообщению",
                "verbose_name_plural": "вложения к групповым сообщениям",
            },
        ),
        migrations.AddField(
            model_name="groupmessage",
            name="read_by",
            field=models.ManyToManyField(
                blank=True,
                related_name="read_group_messages",
                through="messaging.GroupMessageReadStatus",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="groupmessage",
            name="sender",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sent_group_messages",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Отправитель",
            ),
        ),
        migrations.CreateModel(
            name="AnnouncementAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="announcement_attachments/", verbose_name="Файл"
                    ),
                ),
                (
                    "filename",
                    models.CharField(max_length=255, verbose_name="Имя файла"),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(default=0, verbose_name="Размер файла"),
                ),
                (
                    "content_type",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Тип содержимого"
                    ),
                ),
                (
                    "announcement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="messaging.announcement",
                        verbose_name="Объявление",
                    ),
                ),
            ],
            options={
                "verbose_name": "вложение к объявлению",
                "verbose_name_plural": "вложения к объявлениям",
            },
        ),
        migrations.AddField(
            model_name="announcement",
            name="category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="announcements",
                to="messaging.announcementcategory",
                verbose_name="Категория",
            ),
        ),
        migrations.AddField(
            model_name="announcement",
            name="content_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.CreateModel(
            name="AnnouncementReadStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время прочтения"
                    ),
                ),
                (
                    "announcement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="read_statuses",
                        to="messaging.announcement",
                        verbose_name="Объявление",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="read_announcements",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "статус прочтения объявления",
                "verbose_name_plural": "статусы прочтения объявлений",
                "unique_together": {("announcement", "user")},
            },
        ),
    ]
