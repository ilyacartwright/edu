# Generated by Django 4.2.10 on 2025-05-05 21:53

import course_elements.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accounts", "0003_teachersubject_subject_teachersubject_teacher_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Assignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(verbose_name="Описание задания")),
                (
                    "requirements",
                    models.TextField(blank=True, verbose_name="Требования"),
                ),
                (
                    "attachment",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=course_elements.models.get_assignment_file_path,
                        verbose_name="Вложение",
                    ),
                ),
                (
                    "max_score",
                    models.PositiveSmallIntegerField(
                        default=100, verbose_name="Максимальный балл"
                    ),
                ),
                (
                    "passing_score",
                    models.PositiveSmallIntegerField(
                        default=60, verbose_name="Проходной балл"
                    ),
                ),
                (
                    "due_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Срок сдачи"
                    ),
                ),
                (
                    "late_submissions_allowed",
                    models.BooleanField(
                        default=True, verbose_name="Разрешить поздние сдачи"
                    ),
                ),
                (
                    "late_submissions_deadline",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Крайний срок поздних сдач"
                    ),
                ),
                (
                    "max_file_size_mb",
                    models.PositiveSmallIntegerField(
                        default=10, verbose_name="Максимальный размер файла (МБ)"
                    ),
                ),
                (
                    "allowed_file_types",
                    models.CharField(
                        blank=True,
                        help_text="Список расширений файлов через запятую, например: pdf,docx,zip",
                        max_length=255,
                        verbose_name="Разрешенные типы файлов",
                    ),
                ),
                (
                    "resubmissions_allowed",
                    models.BooleanField(
                        default=True, verbose_name="Разрешить переотправку"
                    ),
                ),
                (
                    "max_attempts",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Максимальное количество попыток",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
            ],
            options={
                "verbose_name": "задание",
                "verbose_name_plural": "задания",
            },
        ),
        migrations.CreateModel(
            name="AssignmentSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text_answer",
                    models.TextField(blank=True, verbose_name="Текстовый ответ"),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=course_elements.models.get_solution_file_path,
                        verbose_name="Файл решения",
                    ),
                ),
                (
                    "file_name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Имя файла"
                    ),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Размер файла (байт)"
                    ),
                ),
                (
                    "attempt_number",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Номер попытки"
                    ),
                ),
                (
                    "submission_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="Дата подачи"),
                ),
                (
                    "is_late",
                    models.BooleanField(
                        default=False, verbose_name="Подано с опозданием"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("submitted", "Подано"),
                            ("being_checked", "Проверяется"),
                            ("graded", "Оценено"),
                            ("returned_for_revision", "Возвращено на доработку"),
                        ],
                        default="submitted",
                        max_length=25,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "score",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Баллы"
                    ),
                ),
                (
                    "graded_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата проверки"
                    ),
                ),
                (
                    "feedback",
                    models.TextField(blank=True, verbose_name="Отзыв преподавателя"),
                ),
            ],
            options={
                "verbose_name": "решение задания",
                "verbose_name_plural": "решения заданий",
                "ordering": ["-submission_date"],
            },
        ),
        migrations.CreateModel(
            name="Discussion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Описание обсуждения"),
                ),
                (
                    "is_graded",
                    models.BooleanField(
                        default=False, verbose_name="Оцениваемое обсуждение"
                    ),
                ),
                (
                    "max_score",
                    models.PositiveSmallIntegerField(
                        default=10, verbose_name="Максимальный балл"
                    ),
                ),
                (
                    "required_posts",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Необходимое количество постов"
                    ),
                ),
                (
                    "required_replies",
                    models.PositiveSmallIntegerField(
                        default=2, verbose_name="Необходимое количество ответов"
                    ),
                ),
                (
                    "allow_anonymous",
                    models.BooleanField(
                        default=False, verbose_name="Разрешить анонимные сообщения"
                    ),
                ),
                (
                    "require_approval",
                    models.BooleanField(
                        default=False, verbose_name="Требуется одобрение сообщений"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
            ],
            options={
                "verbose_name": "обсуждение",
                "verbose_name_plural": "обсуждения",
            },
        ),
        migrations.CreateModel(
            name="DiscussionAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="discussion_attachments/", verbose_name="Файл"
                    ),
                ),
                (
                    "filename",
                    models.CharField(max_length=255, verbose_name="Имя файла"),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(default=0, verbose_name="Размер файла"),
                ),
            ],
            options={
                "verbose_name": "вложение к обсуждению",
                "verbose_name_plural": "вложения к обсуждениям",
            },
        ),
        migrations.CreateModel(
            name="DiscussionMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="Содержимое")),
                (
                    "is_solution",
                    models.BooleanField(
                        default=False, verbose_name="Отмечено как решение"
                    ),
                ),
                (
                    "is_anonymous",
                    models.BooleanField(default=False, verbose_name="Анонимно"),
                ),
                (
                    "is_approved",
                    models.BooleanField(default=True, verbose_name="Одобрено"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
            ],
            options={
                "verbose_name": "сообщение обсуждения",
                "verbose_name_plural": "сообщения обсуждения",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="DiscussionParticipation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "topics_created",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Создано тем"
                    ),
                ),
                (
                    "messages_posted",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Отправлено сообщений"
                    ),
                ),
                (
                    "replies_posted",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Отправлено ответов"
                    ),
                ),
                (
                    "grade",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Оценка"
                    ),
                ),
                (
                    "graded_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата оценки"
                    ),
                ),
                (
                    "feedback",
                    models.TextField(blank=True, verbose_name="Отзыв преподавателя"),
                ),
            ],
            options={
                "verbose_name": "участие в обсуждении",
                "verbose_name_plural": "участие в обсуждениях",
            },
        ),
        migrations.CreateModel(
            name="DiscussionTopic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Заголовок")),
                ("content", models.TextField(verbose_name="Содержимое")),
                (
                    "is_pinned",
                    models.BooleanField(default=False, verbose_name="Закреплено"),
                ),
                (
                    "is_closed",
                    models.BooleanField(default=False, verbose_name="Закрыто"),
                ),
                (
                    "is_anonymous",
                    models.BooleanField(default=False, verbose_name="Анонимно"),
                ),
                (
                    "is_approved",
                    models.BooleanField(default=True, verbose_name="Одобрено"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "views_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Количество просмотров"
                    ),
                ),
            ],
            options={
                "verbose_name": "тема обсуждения",
                "verbose_name_plural": "темы обсуждения",
                "ordering": ["-is_pinned", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InteractiveAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.PositiveSmallIntegerField(default=0, verbose_name="Баллы"),
                ),
                (
                    "max_score",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Максимальный балл"
                    ),
                ),
                (
                    "score_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="Процент",
                    ),
                ),
                ("passed", models.BooleanField(default=False, verbose_name="Пройден")),
                (
                    "raw_result",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Результаты в JSON"
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время начала"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Время завершения"
                    ),
                ),
                (
                    "time_spent",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Затраченное время (сек)"
                    ),
                ),
            ],
            options={
                "verbose_name": "попытка интерактивного содержимого",
                "verbose_name_plural": "попытки интерактивного содержимого",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="InteractiveContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("h5p", "H5P"),
                            ("embedded", "Внешнее встроенное содержимое"),
                            ("iframe", "iFrame"),
                            ("custom", "Свой HTML/JavaScript"),
                        ],
                        max_length=20,
                        verbose_name="Тип содержимого",
                    ),
                ),
                (
                    "content_url",
                    models.URLField(blank=True, verbose_name="URL содержимого"),
                ),
                (
                    "content_embed_code",
                    models.TextField(blank=True, verbose_name="Код встраивания"),
                ),
                (
                    "content_html",
                    models.TextField(blank=True, verbose_name="HTML-содержимое"),
                ),
                (
                    "content_js",
                    models.TextField(blank=True, verbose_name="JavaScript-содержимое"),
                ),
                (
                    "h5p_content_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="ID H5P-контента"
                    ),
                ),
                (
                    "width",
                    models.CharField(
                        default="100%", max_length=20, verbose_name="Ширина"
                    ),
                ),
                (
                    "height",
                    models.CharField(
                        default="600px", max_length=20, verbose_name="Высота"
                    ),
                ),
                (
                    "allow_fullscreen",
                    models.BooleanField(
                        default=True, verbose_name="Разрешить полноэкранный режим"
                    ),
                ),
                (
                    "is_gradable",
                    models.BooleanField(
                        default=False, verbose_name="Оцениваемый элемент"
                    ),
                ),
                (
                    "max_score",
                    models.PositiveSmallIntegerField(
                        default=100, verbose_name="Максимальный балл"
                    ),
                ),
                (
                    "passing_score",
                    models.PositiveSmallIntegerField(
                        default=70, verbose_name="Проходной балл (%)"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
            ],
            options={
                "verbose_name": "интерактивное содержимое",
                "verbose_name_plural": "интерактивное содержимое",
            },
        ),
        migrations.CreateModel(
            name="LectureContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(blank=True, verbose_name="Содержимое")),
                (
                    "format",
                    models.CharField(
                        choices=[
                            ("markdown", "Markdown"),
                            ("html", "HTML"),
                            ("plain", "Простой текст"),
                        ],
                        default="markdown",
                        max_length=10,
                        verbose_name="Формат",
                    ),
                ),
                (
                    "show_toc",
                    models.BooleanField(
                        default=True, verbose_name="Показывать оглавление"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "word_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Количество слов"
                    ),
                ),
                (
                    "estimated_read_time",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Оценочное время чтения (мин)"
                    ),
                ),
            ],
            options={
                "verbose_name": "содержимое лекции",
                "verbose_name_plural": "содержимое лекций",
            },
        ),
        migrations.CreateModel(
            name="Quiz",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_limit",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Ограничение времени (мин)"
                    ),
                ),
                (
                    "attempts_allowed",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Разрешено попыток"
                    ),
                ),
                (
                    "passing_score",
                    models.PositiveSmallIntegerField(
                        default=70,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Проходной балл (%)",
                    ),
                ),
                (
                    "randomize_questions",
                    models.BooleanField(
                        default=False, verbose_name="Случайный порядок вопросов"
                    ),
                ),
                (
                    "show_correct_answers",
                    models.BooleanField(
                        default=True, verbose_name="Показывать правильные ответы"
                    ),
                ),
                (
                    "instructions",
                    models.TextField(blank=True, verbose_name="Инструкции"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
            ],
            options={
                "verbose_name": "тест",
                "verbose_name_plural": "тесты",
            },
        ),
        migrations.CreateModel(
            name="QuizAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text_answer",
                    models.TextField(blank=True, verbose_name="Текстовый ответ"),
                ),
                (
                    "numeric_answer",
                    models.DecimalField(
                        blank=True,
                        decimal_places=5,
                        max_digits=15,
                        null=True,
                        verbose_name="Числовой ответ",
                    ),
                ),
                (
                    "order_answer",
                    models.TextField(blank=True, verbose_name="Ответ с порядком"),
                ),
                (
                    "is_correct",
                    models.BooleanField(default=False, verbose_name="Правильный"),
                ),
                (
                    "partial_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="Частичный балл",
                    ),
                ),
                (
                    "answered_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время ответа"
                    ),
                ),
            ],
            options={
                "verbose_name": "ответ на вопрос",
                "verbose_name_plural": "ответы на вопросы",
            },
        ),
        migrations.CreateModel(
            name="QuizAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("in_progress", "В процессе"),
                            ("completed", "Завершена"),
                            ("timed_out", "Время истекло"),
                        ],
                        default="in_progress",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время начала"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Время завершения"
                    ),
                ),
                (
                    "time_spent",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Затраченное время (сек)"
                    ),
                ),
                (
                    "score",
                    models.PositiveSmallIntegerField(default=0, verbose_name="Баллы"),
                ),
                (
                    "max_score",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Максимальный балл"
                    ),
                ),
                (
                    "score_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="Процент",
                    ),
                ),
                ("passed", models.BooleanField(default=False, verbose_name="Пройден")),
            ],
            options={
                "verbose_name": "попытка теста",
                "verbose_name_plural": "попытки теста",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="QuizOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text",
                    models.CharField(max_length=255, verbose_name="Текст варианта"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=course_elements.models.get_quiz_image_path,
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "is_correct",
                    models.BooleanField(default=False, verbose_name="Правильный"),
                ),
                (
                    "match_text",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Текст для сопоставления",
                    ),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(default=0, verbose_name="Порядок"),
                ),
            ],
            options={
                "verbose_name": "вариант ответа",
                "verbose_name_plural": "варианты ответа",
                "ordering": ["question", "order"],
            },
        ),
        migrations.CreateModel(
            name="QuizQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="Текст вопроса")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=course_elements.models.get_quiz_image_path,
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("single", "Одиночный выбор"),
                            ("multiple", "Множественный выбор"),
                            ("true_false", "Верно/Неверно"),
                            ("text", "Текстовый ответ"),
                            ("numeric", "Числовой ответ"),
                            ("matching", "Сопоставление"),
                            ("ordering", "Упорядочивание"),
                        ],
                        max_length=20,
                        verbose_name="Тип вопроса",
                    ),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(default=0, verbose_name="Порядок"),
                ),
                (
                    "points",
                    models.PositiveSmallIntegerField(default=1, verbose_name="Баллы"),
                ),
                (
                    "explanation",
                    models.TextField(
                        blank=True,
                        help_text="Объяснение правильного ответа",
                        verbose_name="Объяснение",
                    ),
                ),
            ],
            options={
                "verbose_name": "вопрос теста",
                "verbose_name_plural": "вопросы теста",
                "ordering": ["quiz", "order"],
            },
        ),
        migrations.CreateModel(
            name="Survey",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Описание опроса"),
                ),
                (
                    "is_anonymous",
                    models.BooleanField(default=True, verbose_name="Анонимный опрос"),
                ),
                (
                    "show_results",
                    models.BooleanField(
                        default=True, verbose_name="Показывать результаты"
                    ),
                ),
                (
                    "allow_multiple_submissions",
                    models.BooleanField(
                        default=False, verbose_name="Разрешить несколько попыток"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
            ],
            options={
                "verbose_name": "опрос",
                "verbose_name_plural": "опросы",
            },
        ),
        migrations.CreateModel(
            name="SurveyAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text_answer",
                    models.TextField(blank=True, verbose_name="Текстовый ответ"),
                ),
                (
                    "numeric_answer",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="Числовой ответ"
                    ),
                ),
            ],
            options={
                "verbose_name": "ответ на вопрос опроса",
                "verbose_name_plural": "ответы на вопросы опроса",
            },
        ),
        migrations.CreateModel(
            name="SurveyOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text",
                    models.CharField(max_length=255, verbose_name="Текст варианта"),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(default=0, verbose_name="Порядок"),
                ),
            ],
            options={
                "verbose_name": "вариант ответа опроса",
                "verbose_name_plural": "варианты ответа опроса",
                "ordering": ["question", "order"],
            },
        ),
        migrations.CreateModel(
            name="SurveyQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="Текст вопроса")),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("text", "Текстовый ответ"),
                            ("textarea", "Многострочный текст"),
                            ("single", "Одиночный выбор"),
                            ("multiple", "Множественный выбор"),
                            ("likert", "Шкала Ликерта"),
                            ("rating", "Рейтинговая шкала"),
                        ],
                        max_length=20,
                        verbose_name="Тип вопроса",
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=True, verbose_name="Обязательный вопрос"
                    ),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(default=0, verbose_name="Порядок"),
                ),
                (
                    "scale_min",
                    models.SmallIntegerField(
                        default=1, verbose_name="Минимальное значение шкалы"
                    ),
                ),
                (
                    "scale_max",
                    models.SmallIntegerField(
                        default=5, verbose_name="Максимальное значение шкалы"
                    ),
                ),
                (
                    "scale_min_label",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Подпись минимума"
                    ),
                ),
                (
                    "scale_max_label",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Подпись максимума"
                    ),
                ),
            ],
            options={
                "verbose_name": "вопрос опроса",
                "verbose_name_plural": "вопросы опроса",
                "ordering": ["survey", "order"],
            },
        ),
        migrations.CreateModel(
            name="SurveySubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "submission_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата отправки"
                    ),
                ),
                (
                    "attempt_number",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Номер попытки"
                    ),
                ),
            ],
            options={
                "verbose_name": "ответ на опрос",
                "verbose_name_plural": "ответы на опрос",
                "ordering": ["-submission_date"],
            },
        ),
        migrations.CreateModel(
            name="VideoContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "source_type",
                    models.CharField(
                        choices=[
                            ("youtube", "YouTube"),
                            ("vimeo", "Vimeo"),
                            ("uploaded", "Загруженное видео"),
                            ("external", "Внешняя ссылка"),
                        ],
                        max_length=20,
                        verbose_name="Тип источника",
                    ),
                ),
                (
                    "video_id",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="ID видео"
                    ),
                ),
                ("video_url", models.URLField(blank=True, verbose_name="URL видео")),
                (
                    "video_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="course_videos/",
                        verbose_name="Видео файл",
                    ),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Длительность (сек)"
                    ),
                ),
                (
                    "start_time",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Время начала (сек)"
                    ),
                ),
                (
                    "end_time",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Время окончания (сек)"
                    ),
                ),
                (
                    "allow_download",
                    models.BooleanField(
                        default=False, verbose_name="Разрешить скачивание"
                    ),
                ),
                (
                    "autoplay",
                    models.BooleanField(
                        default=False, verbose_name="Автовоспроизведение"
                    ),
                ),
                (
                    "show_controls",
                    models.BooleanField(
                        default=True, verbose_name="Показывать элементы управления"
                    ),
                ),
                (
                    "transcript",
                    models.TextField(blank=True, verbose_name="Расшифровка/субтитры"),
                ),
            ],
            options={
                "verbose_name": "видео-содержимое",
                "verbose_name_plural": "видео-содержимое",
            },
        ),
        migrations.CreateModel(
            name="Webinar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "webinar_type",
                    models.CharField(
                        choices=[
                            ("live", "Живая трансляция"),
                            ("recorded", "Запись"),
                            ("upcoming", "Предстоящий вебинар"),
                        ],
                        max_length=20,
                        verbose_name="Тип вебинара",
                    ),
                ),
                (
                    "start_datetime",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата и время начала"
                    ),
                ),
                (
                    "end_datetime",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата и время окончания"
                    ),
                ),
                (
                    "duration_minutes",
                    models.PositiveSmallIntegerField(
                        default=60, verbose_name="Длительность (мин)"
                    ),
                ),
                (
                    "timezone_info",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Часовой пояс"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Описание вебинара"),
                ),
                (
                    "prerequisites",
                    models.TextField(blank=True, verbose_name="Требования для участия"),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("zoom", "Zoom"),
                            ("teams", "Microsoft Teams"),
                            ("meet", "Google Meet"),
                            ("skype", "Skype"),
                            ("webex", "Cisco Webex"),
                            ("youtube", "YouTube Live"),
                            ("custom", "Другая платформа"),
                        ],
                        max_length=20,
                        verbose_name="Платформа",
                    ),
                ),
                (
                    "platform_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Название платформы"
                    ),
                ),
                (
                    "meeting_url",
                    models.URLField(blank=True, verbose_name="Ссылка на встречу"),
                ),
                (
                    "meeting_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="ID встречи"
                    ),
                ),
                (
                    "password",
                    models.CharField(blank=True, max_length=100, verbose_name="Пароль"),
                ),
                (
                    "recording_url",
                    models.URLField(blank=True, verbose_name="Ссылка на запись"),
                ),
                (
                    "presentation_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="webinar_files/",
                        verbose_name="Файл презентации",
                    ),
                ),
                (
                    "track_attendance",
                    models.BooleanField(
                        default=True, verbose_name="Отслеживать присутствие"
                    ),
                ),
                (
                    "minimum_attendance_minutes",
                    models.PositiveSmallIntegerField(
                        default=45, verbose_name="Минимальное время присутствия (мин)"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "co_hosts",
                    models.ManyToManyField(
                        blank=True,
                        related_name="co_hosted_webinars",
                        to="accounts.teacherprofile",
                        verbose_name="Со-ведущие",
                    ),
                ),
            ],
            options={
                "verbose_name": "вебинар",
                "verbose_name_plural": "вебинары",
            },
        ),
        migrations.CreateModel(
            name="WebinarAttendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "joined_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Время входа"
                    ),
                ),
                (
                    "left_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Время выхода"
                    ),
                ),
                (
                    "attendance_minutes",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Время присутствия (мин)"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("registered", "Зарегистрирован"),
                            ("attended", "Присутствовал"),
                            ("partial", "Частично присутствовал"),
                            ("absent", "Отсутствовал"),
                            ("watched_recording", "Просмотрел запись"),
                        ],
                        default="registered",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "has_participated",
                    models.BooleanField(
                        default=False, verbose_name="Участвовал в обсуждении"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP-адрес"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User-Agent")),
                (
                    "teacher_notes",
                    models.TextField(blank=True, verbose_name="Заметки преподавателя"),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="webinar_attendances",
                        to="accounts.studentprofile",
                        verbose_name="Студент",
                    ),
                ),
                (
                    "webinar",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendances",
                        to="course_elements.webinar",
                        verbose_name="Вебинар",
                    ),
                ),
            ],
            options={
                "verbose_name": "посещение вебинара",
                "verbose_name_plural": "посещения вебинаров",
            },
        ),
    ]
