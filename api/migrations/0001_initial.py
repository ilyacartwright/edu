# Generated by Django 4.2.10 on 2025-05-05 21:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="APIClient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "client_id",
                    models.CharField(
                        editable=False,
                        max_length=64,
                        unique=True,
                        verbose_name="ID клиента",
                    ),
                ),
                (
                    "client_secret",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=128,
                        verbose_name="Секрет клиента",
                    ),
                ),
                (
                    "redirect_uris",
                    models.TextField(
                        blank=True,
                        help_text="URL перенаправления через запятую",
                        verbose_name="URL перенаправления",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "access_token_lifetime",
                    models.PositiveIntegerField(
                        default=60, verbose_name="Время жизни токена (мин)"
                    ),
                ),
                (
                    "refresh_token_lifetime",
                    models.PositiveIntegerField(
                        default=30, verbose_name="Время жизни refresh токена (дни)"
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="api_client_logos/",
                        verbose_name="Логотип",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_clients",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Владелец",
                    ),
                ),
            ],
            options={
                "verbose_name": "клиент API",
                "verbose_name_plural": "клиенты API",
            },
        ),
        migrations.CreateModel(
            name="APIEndpoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "path",
                    models.CharField(max_length=255, unique=True, verbose_name="Путь"),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                ("description", models.TextField(verbose_name="Описание")),
                (
                    "allowed_methods",
                    models.CharField(
                        help_text="Методы через запятую, например: GET,POST",
                        max_length=100,
                        verbose_name="Разрешенные методы",
                    ),
                ),
                (
                    "response_format",
                    models.TextField(blank=True, verbose_name="Формат ответа"),
                ),
                (
                    "rate_limit",
                    models.PositiveIntegerField(
                        default=100, verbose_name="Ограничение запросов (в час)"
                    ),
                ),
                (
                    "cache_timeout",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Время кэширования (сек)"
                    ),
                ),
                (
                    "requires_authentication",
                    models.BooleanField(
                        default=True, verbose_name="Требуется аутентификация"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "is_deprecated",
                    models.BooleanField(default=False, verbose_name="Устаревший"),
                ),
                (
                    "version",
                    models.CharField(
                        default="v1", max_length=20, verbose_name="Версия"
                    ),
                ),
            ],
            options={
                "verbose_name": "конечная точка API",
                "verbose_name_plural": "конечные точки API",
                "ordering": ["path"],
            },
        ),
        migrations.CreateModel(
            name="APIKey",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        editable=False, max_length=64, unique=True, verbose_name="Ключ"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "requests_limit",
                    models.PositiveIntegerField(
                        default=1000, verbose_name="Лимит запросов"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Истекает"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "last_used_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Последнее использование"
                    ),
                ),
                (
                    "allowed_ips",
                    models.TextField(
                        blank=True,
                        help_text="Список IP-адресов через запятую. Пусто = все адреса.",
                        verbose_name="Разрешенные IP-адреса",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_keys",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "API ключ",
                "verbose_name_plural": "API ключи",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="APIToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "access_token",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Токен доступа"
                    ),
                ),
                (
                    "refresh_token",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="Refresh токен",
                    ),
                ),
                ("expires_at", models.DateTimeField(verbose_name="Истекает")),
                (
                    "refresh_expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Refresh истекает"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "scope",
                    models.TextField(
                        blank=True,
                        help_text="Разрешенные области через пробел",
                        verbose_name="Область действия",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "last_used_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Последнее использование"
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tokens",
                        to="api.apiclient",
                        verbose_name="Клиент API",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_tokens",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "API токен",
                "verbose_name_plural": "API токены",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WebhookSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("target_url", models.URLField(verbose_name="URL назначения")),
                (
                    "event_types",
                    models.TextField(
                        help_text="Типы событий через запятую",
                        verbose_name="Типы событий",
                    ),
                ),
                (
                    "secret",
                    models.CharField(blank=True, max_length=128, verbose_name="Секрет"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "last_delivery_attempt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Последняя попытка доставки"
                    ),
                ),
                (
                    "successful_deliveries",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Успешных доставок"
                    ),
                ),
                (
                    "failed_deliveries",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Неудачных доставок"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="webhook_subscriptions",
                        to="api.apiclient",
                        verbose_name="Клиент API",
                    ),
                ),
            ],
            options={
                "verbose_name": "webhook-подписка",
                "verbose_name_plural": "webhook-подписки",
                "ordering": ["-created_at"],
                "unique_together": {("client", "target_url")},
            },
        ),
        migrations.CreateModel(
            name="WebhookDelivery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(max_length=50, verbose_name="Тип события"),
                ),
                (
                    "event_id",
                    models.CharField(max_length=100, verbose_name="ID события"),
                ),
                ("payload", models.TextField(verbose_name="Содержимое запроса")),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время попытки"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Ожидает отправки"),
                            ("delivered", "Доставлено"),
                            ("failed", "Ошибка доставки"),
                            ("retrying", "Повторная попытка"),
                            ("dropped", "Отброшено"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "response_code",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Код ответа"
                    ),
                ),
                (
                    "response_body",
                    models.TextField(blank=True, verbose_name="Тело ответа"),
                ),
                (
                    "attempts",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Количество попыток"
                    ),
                ),
                (
                    "next_retry",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Следующая попытка"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Сообщение об ошибке"),
                ),
                (
                    "subscription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deliveries",
                        to="api.webhooksubscription",
                        verbose_name="Подписка",
                    ),
                ),
            ],
            options={
                "verbose_name": "доставка webhook",
                "verbose_name_plural": "доставки webhook",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="APITokenUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время запроса"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP-адрес"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User-Agent")),
                (
                    "endpoint",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Конечная точка"
                    ),
                ),
                (
                    "method",
                    models.CharField(blank=True, max_length=10, verbose_name="Метод"),
                ),
                (
                    "status_code",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Код статуса"
                    ),
                ),
                (
                    "response_time",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Время ответа (мс)"
                    ),
                ),
                (
                    "token",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_logs",
                        to="api.apitoken",
                        verbose_name="Токен",
                    ),
                ),
            ],
            options={
                "verbose_name": "использование токена",
                "verbose_name_plural": "использование токенов",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="APIKeyUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время запроса"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP-адрес"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User-Agent")),
                (
                    "endpoint",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Конечная точка"
                    ),
                ),
                (
                    "method",
                    models.CharField(blank=True, max_length=10, verbose_name="Метод"),
                ),
                (
                    "status_code",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Код статуса"
                    ),
                ),
                (
                    "response_time",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Время ответа (мс)"
                    ),
                ),
                (
                    "api_key",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_logs",
                        to="api.apikey",
                        verbose_name="API ключ",
                    ),
                ),
            ],
            options={
                "verbose_name": "использование API-ключа",
                "verbose_name_plural": "использование API-ключей",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="APIErrorLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Время"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP-адрес"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User-Agent")),
                (
                    "endpoint",
                    models.CharField(max_length=255, verbose_name="Конечная точка"),
                ),
                ("method", models.CharField(max_length=10, verbose_name="Метод")),
                (
                    "error_code",
                    models.CharField(max_length=100, verbose_name="Код ошибки"),
                ),
                ("error_message", models.TextField(verbose_name="Сообщение об ошибке")),
                (
                    "stack_trace",
                    models.TextField(blank=True, verbose_name="Стек вызовов"),
                ),
                (
                    "request_data",
                    models.TextField(blank=True, verbose_name="Данные запроса"),
                ),
                (
                    "response_status",
                    models.PositiveSmallIntegerField(verbose_name="Статус ответа"),
                ),
                (
                    "response_data",
                    models.TextField(blank=True, verbose_name="Данные ответа"),
                ),
                (
                    "api_key",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="api_errors",
                        to="api.apikey",
                        verbose_name="API ключ",
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="api_errors",
                        to="api.apiclient",
                        verbose_name="Клиент API",
                    ),
                ),
                (
                    "token",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="api_errors",
                        to="api.apitoken",
                        verbose_name="Токен",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="api_errors",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "лог ошибок API",
                "verbose_name_plural": "логи ошибок API",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="APIKeyPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "resource",
                    models.CharField(
                        choices=[
                            ("all", "Все ресурсы"),
                            ("students", "Студенты"),
                            ("teachers", "Преподаватели"),
                            ("courses", "Курсы"),
                            ("grades", "Оценки"),
                            ("attendance", "Посещаемость"),
                            ("schedule", "Расписание"),
                            ("reports", "Отчеты"),
                        ],
                        max_length=50,
                        verbose_name="Ресурс",
                    ),
                ),
                ("can_read", models.BooleanField(default=True, verbose_name="Чтение")),
                (
                    "can_create",
                    models.BooleanField(default=False, verbose_name="Создание"),
                ),
                (
                    "can_update",
                    models.BooleanField(default=False, verbose_name="Обновление"),
                ),
                (
                    "can_delete",
                    models.BooleanField(default=False, verbose_name="Удаление"),
                ),
                (
                    "api_key",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permissions",
                        to="api.apikey",
                        verbose_name="API ключ",
                    ),
                ),
            ],
            options={
                "verbose_name": "разрешение API-ключа",
                "verbose_name_plural": "разрешения API-ключа",
                "unique_together": {("api_key", "resource")},
            },
        ),
        migrations.CreateModel(
            name="APIEndpointParameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                ("description", models.TextField(verbose_name="Описание")),
                (
                    "param_type",
                    models.CharField(
                        choices=[
                            ("path", "В пути"),
                            ("query", "В запросе"),
                            ("body", "В теле"),
                            ("header", "В заголовке"),
                            ("form", "В форме"),
                        ],
                        max_length=20,
                        verbose_name="Тип параметра",
                    ),
                ),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("string", "Строка"),
                            ("integer", "Целое число"),
                            ("boolean", "Логическое"),
                            ("float", "Число с плавающей точкой"),
                            ("array", "Массив"),
                            ("object", "Объект"),
                            ("date", "Дата"),
                            ("datetime", "Дата и время"),
                            ("file", "Файл"),
                        ],
                        max_length=20,
                        verbose_name="Тип данных",
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(default=False, verbose_name="Обязательный"),
                ),
                (
                    "default_value",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Значение по умолчанию"
                    ),
                ),
                (
                    "example",
                    models.CharField(blank=True, max_length=255, verbose_name="Пример"),
                ),
                (
                    "endpoint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parameters",
                        to="api.apiendpoint",
                        verbose_name="Конечная точка",
                    ),
                ),
            ],
            options={
                "verbose_name": "параметр API",
                "verbose_name_plural": "параметры API",
                "ordering": ["endpoint", "name"],
                "unique_together": {("endpoint", "name", "param_type")},
            },
        ),
    ]
